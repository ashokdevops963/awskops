
*Create Ubuntu EC2 instance

*Install AWSCLI

curl https://s3.amazonaws.com/aws-cli/awscli-bundle.zip -o awscli-bundle.zip
apt install unzip python
unzip awscli-bundle.zip
 
#sudo apt-get install unzip - if you dont have unzip in your system
./awscli-bundle/install -i /usr/local/aws -b /usr/local/bin/aws


*Install kubectl

curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl


*Create an IAM user/role with Route53, EC2, IAM and S3 full access

*Attach IAM role to ubuntu server

Note: If you create IAM user with programmatic access then provide Access keys.
 
aws configure

*Install kops on ubuntu instance:

curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
chmod +x kops-linux-amd64
sudo mv kops-linux-amd64 /usr/local/bin/kops

Create a Route53 private hosted zone (you can create Public hosted zone if you have a domain)

*create an S3 bucket
aws s3 mb s3://kopss.k8s.pkr.in


*Expose environment variable:
export KOPS_STATE_STORE=s3://kopss.k8s.pkr.in

*Create sshkeys before creating cluster
ssh-keygen

*Create kubernetes cluster definitions on S3 bucket
kops create cluster --cloud=aws --zones=ap-southeast-1b --name=kopss.k8s.pkr.in --dns-zone=pkr.in --dns private

*Create kubernetes cluser
kops update cluster kopss.k8s.pkr.in --yes

*Validate your cluster
kops validate cluster

*To list nodes
kubectl get nodes 

kops edit ig nodes (edit maxsize 2 to 0 & minsize 2 to 0 for nodes)

kops edit ig  master-ap-south-1b (using master region again set maxsize 1 to 0 & minsize to 1 to 0 for master)

*export KOPS_STATE_STORE=s3://kopss.k8s.pkr.in (it will ask every time before node & master setup if not set permanently)

*kops update cluster --yes
*kops rolling-update cluster  (cluster/nodes/server will be offline now)

kops delete cluster kopss.k8s.pkr.in --yes
